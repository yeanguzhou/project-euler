package euler

import "fmt"

// Problem 2: Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

//func main()  {
//    getEvenValueFib()
//}

func getEvenValueFib()  {
    sum := 0
    for i := 1;Fibonacci(i)<=4000000;i++{
        fi := Fibonacci(i)
        if fi % 2 == 0{
            //fmt.Println(fi)
            sum += fi
        }
    }
    fmt.Println(sum)
}

func Fibonacci(index int)int  {
    if index == 1{
        return 1
    }else if index == 2{
        return 2
    }
    return Fibonacci(index-2) + Fibonacci(index-1)
}
